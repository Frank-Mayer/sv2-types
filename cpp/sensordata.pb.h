/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_SENSORDATA_PB_H_INCLUDED
#define PB_SENSORDATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* ESP32 attached sensor data */
typedef struct _SensorData {
    /* value of the sensor */
    float value;
    /* name of the sensor (e.g. "temperature", "humidity", "wind speed") */
    pb_callback_t name;
    /* unit of measurement (e.g. "Â°C", "ppm", "m/s") */
    pb_callback_t unit;
} SensorData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorData_init_default                  {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define SensorData_init_zero                     {0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SensorData_value_tag                     1
#define SensorData_name_tag                      2
#define SensorData_unit_tag                      3

/* Struct field encoding specification for nanopb */
#define SensorData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    value,             1) \
X(a, CALLBACK, SINGULAR, STRING,   name,              2) \
X(a, CALLBACK, SINGULAR, STRING,   unit,              3)
#define SensorData_CALLBACK pb_default_field_callback
#define SensorData_DEFAULT NULL

extern const pb_msgdesc_t SensorData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorData_fields &SensorData_msg

/* Maximum encoded size of messages (where known) */
/* SensorData_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
