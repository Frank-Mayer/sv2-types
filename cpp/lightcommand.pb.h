/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_LIGHTCOMMAND_PB_H_INCLUDED
#define PB_LIGHTCOMMAND_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Control the light (on/off) */
typedef struct _LightControl {
    /* whether the light should be on or off */
    bool on;
} LightControl;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define LightControl_init_default                {0}
#define LightControl_init_zero                   {0}

/* Field tags (for use in manual encoding/decoding) */
#define LightControl_on_tag                      1

/* Struct field encoding specification for nanopb */
#define LightControl_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     on,                1)
#define LightControl_CALLBACK NULL
#define LightControl_DEFAULT NULL

extern const pb_msgdesc_t LightControl_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define LightControl_fields &LightControl_msg

/* Maximum encoded size of messages (where known) */
#define LIGHTCOMMAND_PB_H_MAX_SIZE               LightControl_size
#define LightControl_size                        2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
